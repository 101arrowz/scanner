{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-970b8605a78f66ec.js","src/index.tsx","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-d0b10344131672cf.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"lNt4Y\\\":\\\"index.3bdec287.js\\\",\\\"4euQ1\\\":\\\"sw.js\\\"}\"));","const readFile = Blob.prototype.arrayBuffer || function(this: Blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = () => {\n      resolve(fr.result as ArrayBuffer);\n    };\n    fr.onerror = () => {\n      reject(fr.error);\n    };\n    fr.readAsArrayBuffer(this);\n  })\n}\n\nconst canvas = document.createElement('canvas');\nconst ctx = canvas.getContext('2d')!;\n\nconst getImage = async (img: File) => {\n  const elem = document.createElement('img');\n  const loaded = new Promise<void>((resolve, reject) => {\n    elem.onload = () => { resolve(); };\n    elem.onerror = err => { reject(err); };\n  });\n  elem.src = URL.createObjectURL(img);\n  await loaded;\n  URL.revokeObjectURL(elem.src);\n  canvas.width = elem.width, canvas.height = elem.height;\n  ctx.drawImage(elem, 0, 0);\n  return ctx.getImageData(0, 0, elem.width, elem.height);\n}\n\nconst download = (file: Blob, name: string) => {\n  const url = URL.createObjectURL(file);\n  const el = document.createElement('a');\n  el.download = name;\n  el.href = url;\n  el.click();\n  URL.revokeObjectURL(url);\n}\n\nconst clamp = (x: number, min: number, max: number) =>\n  x < min\n    ? min\n    : x > max\n      ? max\n      : x;\n\n// Convolution function\nconst convolve = (src: Float32Array, width: number, height: number, matrix: Float32Array, radius: number, dst = new Float32Array(src.length)) => {\n  const matSide = (radius << 1) + 1;\n  if (process.env.NODE_ENV != 'production') {\n    if (src.length != width * height || matrix.length != matSide * matSide) {\n      throw new Error('invalid dimensions');\n    }\n  }\n  const iim = height - matSide, jim = width - matSide;\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let result = 0.0;\n      const ii = clamp(i - radius, 0, iim), ji = clamp(j - radius, 0, jim);\n      for (let mi = 0; mi < matSide; ++mi) {\n        for (let mj = 0; mj < matSide; ++mj) {\n          result += src[(mi + ii) * width + (mj + ji)] * matrix[mi * matSide + mj];\n        }\n      }\n      dst[i * width + j] = result;\n    }\n  }\n  return dst;\n}\n\nconst grayscale = (src: Uint8ClampedArray, dst = new Float32Array(src.buffer, src.byteOffset, src.byteLength >> 2)) => {\n  for (let px = 0; px < dst.length; ++px) {\n    const pos = px << 2;\n    dst[px] = src[pos] * 0.00116796875 + src[pos + 1] * 0.00229296875 + src[pos + 2] * 0.0004453125;\n  }\n  return dst;\n}\n\nconst downscale = (src: Float32Array, width: number, height: number, by: number, dst?: Float32Array) => {\n  const dw = Math.floor(width / by);\n  const dh = Math.floor(height / by);\n  if (!dst) {\n    dst = new Float32Array(dh * dw);\n  }\n  const by2 = by * by, mi = dh - 1, mj = dw - 1;\n  for (let i = 1; i < mi; ++i) {\n    const si = i * by, sie = si + by, sif = Math.floor(si), sic = sif + 1, sief = Math.floor(sie);\n    const sir = sic - si, sire = sie - sief;\n    for (let j = 1; j < mj; ++j) {\n      const sj = j * by, sje = sj + by, sjf = Math.floor(sj), sjc = sjf + 1, sjef = Math.floor(sje);\n      const sjr = sjc - sj, sjre = sje - sjef;\n      let sum = 0;\n      for (let rsi = sic; rsi < sief; ++rsi) {\n        for (let rsj = sjc; rsj < sjef; ++rsj) {\n          sum += src[rsi * width + rsj];\n        }\n      }\n      for (let rsj = sjc; rsj < sjef; ++rsj)  {\n        sum += src[sif * width + rsj] * sir;\n        sum += src[sief * width + rsj] * sire;\n      }\n      for (let rsi = sic; rsi < sief; ++rsi)  {\n        sum += src[rsi * width + sjf] * sjr;\n        sum += src[rsi * width + sjef] * sjre;\n      }\n      sum += src[sif * width + sjf] * sir * sjr;\n      sum += src[sif * width + sjef] * sir * sjre;\n      sum += src[sief * width + sjf] * sire * sjr;\n      sum += src[sief * width + sjef] * sire * sjre;\n      dst[i * dw + j] = sum / by2;\n    }\n  }\n  for (let i = 1; i < mi; ++i) {\n    dst[i * dw] = dst[i * dw + 1];\n    dst[i * dw + mj] = dst[i * dw + mj - 1];\n  }\n  for (let j = 0; j < dw; ++j) {\n    dst[j] = dst[j + dw];\n    dst[mi * dw + j] = dst[(mi - 1) * dw + j];\n  }\n  return dst;\n}\n\nconst channel = (src: Uint8ClampedArray, channel: 0 | 1 | 2, dst = new Float32Array(src.buffer, src.byteOffset, src.byteLength >> 2)) => {\n  for (let px = 0; px < dst.length; ++px) {\n    dst[px] = src[(px << 2) + channel] / 255;\n  }\n  return dst;\n}\n\nconst grayscaleToRGB = (src: Float32Array, dst = new Uint8ClampedArray(src.buffer, src.byteOffset, src.byteLength)) => {\n  for (let px = 0; px < src.length; ++px) {\n    const pos = px << 2;\n    dst[pos] = dst[pos + 1] = dst[pos + 2] = src[px] * 255;\n    dst[pos + 3] = 255;\n  }\n  return dst;\n}\n\nconst gaussianKernel = new Float32Array([\n  0.01258, 0.02516, 0.03145, 0.02516, 0.01258,\n  0.02516, 0.0566, 0.07547, 0.0566, 0.02516,\n  0.03145, 0.07547, 0.09434, 0.07547, 0.03145,\n  0.02516, 0.0566, 0.07547, 0.0566, 0.02516,\n  0.01258, 0.02516, 0.03145, 0.02516, 0.01258\n]);\n\nconst gaussianBlur = (src: Float32Array, width: number, height: number, dst?: Float32Array) =>\n  convolve(src, width, height, gaussianKernel, 2, dst);\n\nconst cos = new Float32Array(256);\nconst sin = new Float32Array(256);\nfor (let t = 0; t < 256; ++t) {\n  const theta = Math.PI * t / 256;\n  cos[t] = Math.cos(theta);\n  sin[t] = Math.sin(theta);\n}\nsin[0] = cos[128];\n\n// logic stolen from https://math.stackexchange.com/a/339033\n\n// 3x3 matrix adjugate\nconst adj3 = (src: Float32Array, dst = new Float32Array(9)) => {\n  dst[0] = src[4] * src[8] - src[5] * src[7];\n  dst[1] = src[2] * src[7] - src[1] * src[8];\n  dst[2] = src[1] * src[5] - src[2] * src[4];\n  dst[3] = src[5] * src[6] - src[3] * src[8];\n  dst[4] = src[0] * src[8] - src[2] * src[6];\n  dst[5] = src[2] * src[3] - src[0] * src[5];\n  dst[6] = src[3] * src[7] - src[4] * src[6];\n  dst[7] = src[1] * src[6] - src[0] * src[7];\n  dst[8] = src[0] * src[4] - src[1] * src[3];\n  return dst;\n}\n\n// 3x3 matrix multiplication\nconst mul3 = (a: Float32Array, b: Float32Array, dst = new Float32Array(9)) => {\n  dst[0] = a[0] * b[0] + a[1] * b[3] + a[2] * b[6];\n  dst[1] = a[0] * b[1] + a[1] * b[4] + a[2] * b[7];\n  dst[2] = a[0] * b[2] + a[1] * b[5] + a[2] * b[8];\n  dst[3] = a[3] * b[0] + a[4] * b[3] + a[5] * b[6];\n  dst[4] = a[3] * b[1] + a[4] * b[4] + a[5] * b[7];\n  dst[5] = a[3] * b[2] + a[4] * b[5] + a[5] * b[8];\n  dst[6] = a[6] * b[0] + a[7] * b[3] + a[8] * b[6];\n  dst[7] = a[6] * b[1] + a[7] * b[4] + a[8] * b[7];\n  dst[8] = a[6] * b[2] + a[7] * b[5] + a[8] * b[8];\n  return dst;\n};\n\n// 3x3 matrix multiplication with 3-vector\nconst mul3v = (a: Float32Array, b: Float32Array, dst = new Float32Array(3)) => {\n  dst[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  dst[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n  dst[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  return dst;\n};\n\ntype Point = { x: number, y: number; };\ntype Quad = { a: Point; b: Point; c: Point; d: Point; };\n\n// matrix that maps basis vectors to points\nconst basisToPoints = ({ a, b, c, d }: Quad) => {\n  const m = new Float32Array([\n    a.x, b.x, c.x,\n    a.y, b.y, c.y,\n    1,   1,   1\n  ]);\n  const coeffs = mul3v(adj3(m), new Float32Array([d.x, d.y, 1]));\n  // Multiply values by coefficients\n  return mul3(m, new Float32Array([\n    coeffs[0], 0, 0,\n    0, coeffs[1], 0,\n    0, 0, coeffs[2]\n  ]));\n}\n\nconst createProjector = (from: Quad, to: Quad) => {\n  const srcBasis = basisToPoints(from), dstBasis = basisToPoints(to);\n  const proj = mul3(dstBasis, adj3(srcBasis));\n  return (point: Point): Point => {\n    const projected = mul3v(proj, new Float32Array([point.x, point.y, 1]));\n    return {\n      x: projected[0] / projected[2],\n      y: projected[1] / projected[2]\n    };\n  };\n}\n\nif (process.env.NODE_ENV != 'production' && /(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i.test(navigator.userAgent)) {\n  console.log = (...data) => {\n    const el = document.createElement('div');\n    el.textContent = data.map(v => typeof v == 'object' ? JSON.stringify(v) : v).join(' ');\n    document.body.appendChild(el);\n  }\n  console.timeLog = (label, ...data) => {\n    console.log(label + ' ' + performance.now() + ' ' + data.join(' '));\n  }\n}\n\nconst sortQuad = ({ a, b, c, d }: Quad): Quad => {\n  const side = Math.hypot(a.x - b.x, a.y - b.y) + Math.hypot(c.x - d.x, c.y - d.y);\n  const top = Math.hypot(b.x - c.x, b.y - c.y) + Math.hypot(d.x - a.x, d.y - a.y);\n  // ab or cd\n  if (side > top) {\n    if (a.x + b.x < c.x + d.x) {\n      return a.y > b.y\n        ? { a: a, b: b, c: c, d: d }\n        : { a: b, b: a, c: d, d: c };\n    } else {\n      return c.y > d.y\n        ? { a: c, b: d, c: a, d: b }\n        : { a: d, b: c, c: b, d: a };\n    }\n  } else {\n    if (b.x + c.x < d.x + a.x) {\n      return b.y > c.y\n        ? { a: b, b: c, c: d, d: a }\n        : { a: c, b: b, c: a, d: d };\n    } else {\n      return d.y > a.y\n        ? { a: d, b: a, c: b, d: c }\n        : { a: a, b: d, c: c, d: b };\n    }\n  }\n}\n\nconst toPDF = async (images: ImageData[]) => {\n  const pdfChunks: (string | ArrayLike<number>)[] = [];\n  let index = 0;\n  const offsets: number[] = [];\n  const write = (chunk: string | ArrayLike<number>) => {\n    pdfChunks.push(chunk);\n    index += chunk.length;\n  }\n  const token = (chunk: string | ArrayLike<number>) => {\n    write(' ');\n    write(chunk);\n  }\n  const concat = (chunks: (string | ArrayLike<number>)[]) => {\n    let len = 0;\n    for (const chunk of chunks) len += chunk.length;\n    const buf = new Uint8Array(len);\n    len = 0;\n    for (const chunk of chunks) {\n      if (typeof chunk == 'string') {\n        for (let i = 0; i < chunk.length; ++i) buf[i + len] = chunk.charCodeAt(i);\n      } else {\n        buf.set(chunk, len);\n      }\n      len += chunk.length;\n    }\n    return buf;\n  }\n  // Convenience functions\n  const comment = (content: string) => {\n    write(\"%\" + content + '\\n');\n  }\n  const number = (value: number) => {\n    // Note: this doesnt work for very small and very large numbers\n    token(value.toString());\n  }\n  const ascii = (value: string) => {\n    token('(' + value.replace(/[\\n\\r\\t\\f\\b\\(\\)\\\\]/g, c => '\\\\00' + c.charCodeAt(0).toString(8)) + ')');\n  }\n  const bin = (value: string | ArrayLike<number>) => {\n    let data = '<';\n    if (typeof value == 'string') {\n      for (let i = 0; i < value.length; ++i) {\n        data += value.charCodeAt(i).toString(16);\n      }\n    } else {\n      for (let i = 0; i < value.length; ++i) {\n        data += value[i].toString(16);\n      }\n    }\n    token(data + '>');\n  };\n  const name = (value: string) => {\n    // Note: only supports ASCII names\n    token('/' + value);\n  };\n  const array = (fn: () => void) => {\n    token('[');\n    fn();\n    token(']');\n  };\n  type Dict = Record<string, () => void>;\n  const dict = (values: Dict) => {\n    token('<<');\n    for (const key in values) {\n      name(key);\n      values[key]();\n    }\n    token('>>');\n  };\n  const stream = (desc: Dict, content: ArrayLike<number>) => {\n    if (process.env.NODE_ENV != 'production') {\n      if (!desc['Length']) throw new TypeError('need stream length');\n    }\n    dict(desc);\n    token('stream\\n');\n    write(content);\n    write('endstream');\n  };\n  const object = (fn: () => void) => {\n    write(' ');\n    write(offsets.push(index) + ' 0 obj');\n    fn();\n    token('endobj');\n    return offsets.length;\n  };\n  const reference = (id: number) => {\n    token(id + ' 0 R');\n  }\n  const nullObject = () => {\n    token('null');\n  };\n\n  // v1.4 for compatibility\n  comment('PDF-1.4');\n    // 4 byte binary comment, as suggested by spec\n  comment('\\x90\\x85\\xfa\\xe3');\n  const pages = await Promise.all(images.map(async img => {\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    canvas.getContext('2d')!.putImageData(img, 0, 0);\n    const jpeg = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\n    const jpegData = new Uint8Array(await readFile.call(jpeg));\n    const image = object(() => {\n      stream({\n        Type() {\n          name('XObject');\n        },\n        Subtype() {\n          name('Image');\n        },\n        Width() {\n          number(img.width);\n        },\n        Height() {\n          number(img.height);\n        },\n        ColorSpace() {\n          name('DeviceRGB');\n        },\n        BitsPerComponent() {\n          number(8);\n        },\n        Filter() {\n          name('DCTDecode');\n        },\n        Length() {\n          number(jpegData.length);\n        }\n      }, jpegData);\n    });\n    // US Letter width\n    const height = 792;\n    const width = height * img.width / img.height;\n    const contents = object(() => {\n      const result = `${width} 0 0 ${height} 0 0 cm /I Do`;\n      stream({\n        Length() {\n          number(result.length);\n        }\n      }, concat([\n        result\n      ]));\n    });\n    const page = object(() => {\n      dict({\n        Type() {\n          name('Page')\n        },\n        Parent() {\n          reference(offsets.length + 1);\n        },\n        Resources() {\n          dict({\n            XObject() {\n              dict({\n                I() {\n                  reference(image);\n                }\n              });\n            }\n          });\n        },\n        Contents() {\n          reference(contents);\n        },\n        MediaBox() {\n          array(() => {\n            number(0);\n            number(0);\n            number(width);\n            number(height);\n          });\n        }\n      });\n    });\n    return page;\n  }));\n\n  const pageRoot = object(() => {\n    dict({\n      Type() {\n        name('Pages');\n      },\n      Kids() {\n        array(() => {\n          for (const page of pages) {\n            reference(page);\n          }\n        });\n      },\n      Count() {\n        number(pages.length);\n      }\n    })\n  });\n\n  const catalog = object(() => {\n    dict({\n      Type() {\n        name('Catalog');\n      },\n      Pages() {\n        reference(pageRoot);\n      }\n    });\n  });\n\n  // XREF\n  write('\\n');\n  const xrefOffset = index;\n  write('xref\\n0 ' + (offsets.length + 1) + '\\n0000000000 65535 f \\n');\n  for (const offset of offsets) {\n    write(offset.toString().padStart(10, '0') + ' 00000 n \\n');\n  }\n  write('trailer');\n  dict({\n    Size() {\n      number(offsets.length + 1);\n    },\n    Root() {\n      reference(catalog);\n    }\n  });\n  write('\\nstartxref\\n' + xrefOffset + '\\n%%EOF');\n  return concat(pdfChunks);\n}\n\nconst HOUGH_MATCH_RATIO = 1 / 40;\nconst GRADIENT_ERROR = 32;\n\nconst detectDocument = ({ data, width, height }: ImageData, maxTries = 3) => {\n  console.time('document');\n  const diag = Math.hypot(width, height);\n  const numBins = Math.floor(diag);\n  let scaleFactor = width / 360;\n  if (scaleFactor < 2) {\n    scaleFactor = 1;\n  } else if (scaleFactor > 5) {\n    scaleFactor = 5;\n  }\n  const srcWidth = Math.floor(width / scaleFactor);\n  const srcHeight = Math.floor(height / scaleFactor);\n  const srcLen = srcWidth * srcHeight;\n  const scratch = new Float32Array(srcLen * 3 + (numBins << 8));\n  const dst = scratch.subarray(0, srcLen);\n  const gradBuf = scratch.subarray(srcLen, srcLen << 1);\n  const src = scratch.subarray(srcLen << 1, srcLen * 3);\n  const buf = scratch.subarray(srcLen * 3);\n  if (scaleFactor == 1) {\n    grayscale(data, src)\n  } else {\n    downscale(grayscale(data, new Float32Array(width * height)), width, height, scaleFactor, src);\n  }\n  console.timeLog('document', 'grayscale');\n  gaussianBlur(src, srcWidth, srcHeight, dst);\n  console.timeLog('document', 'blur');\n  const east = 1, southwest = srcWidth - 1, south = srcWidth, southeast = srcWidth + 1;\n  const iim = srcHeight - 1, jim = srcWidth - 1;\n  let totalGrad = 0.0;\n  for (let i = 1; i < iim; ++i) {\n    for (let j = 1; j < jim; ++j) {\n      const px = i * srcWidth + j;\n      const nw = dst[px - southeast], n = dst[px - south], ne = dst[px - southwest], w = dst[px - east],\n            e = dst[px + east], sw = dst[px + southwest], s = dst[px + south], se = dst[px + southeast];\n      const sx = 10 * (e - w) + 3 * (ne + se - nw - sw);\n      const sy = 10 * (n - s) + 3 * (ne + nw - se - sw);\n      const dir = sy / sx;\n      const grad = Math.pow(sx * sx + sy * sy, 0.3);\n      // Add 128 to fix range. Note that this requires rotating the coordinate system\n      const angle = Math.floor(Math.atan(dir) * 256 / Math.PI) + 128;\n      for (let off = -GRADIENT_ERROR; off <= GRADIENT_ERROR; ++off) {\n        let ang = (angle + off) & 255;\n        const bin = (cos[ang] * i + sin[ang] * j + diag) >> 1;\n        buf[(bin << 8) + ang] += grad / (off * off + 3);\n      }\n      // Two shifts because otherwise indexing is messed up by in-between values\n      gradBuf[px] = grad;\n      totalGrad += grad;\n    }\n  }\n  const avgGrad = totalGrad / ((srcHeight - 2) * (srcWidth - 2));\n  console.timeLog('document', 'tally');\n  type Line = { b: number; a: number; s: number; };\n  let max = 0.0;\n  for (let px = 0; px < buf.length; ++px) max = Math.max(buf[px], max);\n  console.timeLog('document', 'tally2');\n  for (let threshold = max * 0.05, numTries = maxTries; numTries > 0; --numTries, threshold *= 0.5) {\n    let lines: Line[] = [];\n    for (let bin = 0; bin < numBins; ++bin) {\n      for (let angle = 0; angle < 256; ++angle) {\n        const ind = (bin << 8) + angle;\n        let val = buf[ind];\n        if (val > threshold) {\n          lines.push({ b: bin, a: angle, s: val });\n        }\n      }\n    }\n    console.timeLog('document', 'tally3');\n    lines.sort((a, b) => b.s - a.s);\n    const maxBinErr = Math.ceil(numBins * HOUGH_MATCH_RATIO), maxAngleErr = Math.ceil(256 * HOUGH_MATCH_RATIO);\n    for (let i = 0; i < lines.length; ++i) {\n      const { b: l1b, a: l1a, s: l1s } = lines[i];\n      let strength = l1s;\n      for (let j = i + 1; j < lines.length; ++j) {\n        const { b, a, s } = lines[j];\n        let angleErr = Math.abs(l1a - a);\n        if (Math.abs(l1b - b) <= maxBinErr && Math.min(angleErr, 256 - angleErr) <= maxAngleErr) {\n          lines.splice(j, 1);\n          strength += s;\n          --j;\n        }\n      }\n      lines[i].s = strength;\n    }\n    console.timeLog('document', 'hough');\n    const intersection = (l1: Line, l2: Line): Point => {\n      const a = sin[l1.a], d = sin[l2.a];\n      const b = cos[l1.a], e = cos[l2.a];\n      const c = (l1.b << 1) - diag, f = (l2.b << 1) - diag;\n      // derived on paper\n      const y = (a * f - d * c) / (a * e - d * b);\n      const x = (c - y * b) / a;\n      return { x, y };\n    }\n    // within ellipse that inscribes rectangle with same aspect ratio, expanded a bit\n    // basically allows for minor corner clipping\n    const inBounds = (p: Point) => {\n      const x = p.x / srcWidth - 0.5, y = p.y / srcHeight - 0.5;\n      // less than or equal to 0.5 for perfect inscription\n      return x * x + y * y <= 0.55;\n    };\n    lines.sort((a, b) => b.s - a.s);\n    console.log(lines);\n    // Max 5000 quadrilaterals to check\n    if (lines.length > 20) {\n      lines = lines.slice(0, 20);\n      numTries = 1;\n    }\n    const scoreBetween = (a: Point, b: Point) => {\n      let score = 0.0;\n      // TODO: optimize\n      // algorithm shamelessly robbed from https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm\n      const xi = Math.round(a.x), yi = Math.round(a.y);\n      const xf = Math.round(b.x), yf = Math.round(b.y);\n      const dx = Math.abs(xf - xi), dy = -Math.abs(yf - yi);\n      const sx = xi < xf ? 1 : -1;\n      const sy = yi < yf ? 1 : -1;\n      for (let x = xi, y = yi, err = dx + dy; x != xf || y != yf;) {\n        const px = y * srcWidth + x;\n        score += (gradBuf[px] || 0) - avgGrad;\n        const e2 = err * 2;\n        if (e2 >= dy) {\n          err += dy;\n          x += sx;\n        }\n        if (e2 <= dx) {\n          err += dx;\n          y += sy;\n        }\n      }\n      // Low dependence on length\n      return score * (Math.pow(dx - dy, -0.6) || 0);\n    }\n    const scoreQuad = ({ a, b, c, d }: Quad) => {\n      return Math.pow(scoreBetween(a, b) + scoreBetween(b, c) + scoreBetween(c, d) + scoreBetween(d, a), 2);\n    }\n    const rightErr = (l1: Line, l2: Line) => {\n      const err = Math.abs(l1.a - l2.a) - 128;\n      return err * err + 1;\n    }\n    const scoreLines = (l1: Line, l2: Line, l3: Line, l4: Line) => {\n      const e12 = rightErr(l1, l2), e23 = rightErr(l2, l3), e34 = rightErr(l3, l4), e41 = rightErr(l4, l1);\n      return Math.pow(e12 * e12 + e23 * e23 + e34 * e34 + e41 * e41, -0.3) * Math.pow(l1.s * l2.s * l3.s * l4.s, 0.1);\n    }\n    const rects: { q: Quad; s: number; }[] = [];\n    for (let i = 0; i < lines.length; ++i) {\n      const l1 = lines[i];\n      for (let j = i + 1; j < lines.length; ++j) {\n        const l2 = lines[j];\n        const i12 = intersection(l1, l2);\n        for (let k = j + 1; k < lines.length; ++k) {\n          const l3 = lines[k];\n          const i13 = intersection(l1, l3);\n          const i23 = intersection(l2, l3);\n          if (inBounds(i12)) {\n            // assume corner is a page corner\n            // then i13 XOR i23 must also be a corner\n            if (inBounds(i13)) {\n              if (!inBounds(i23)) {\n                for (let l = k + 1; l < lines.length; ++l) {\n                  const l4 = lines[l];\n                  const i14 = intersection(l1, l4);\n                  const i24 = intersection(l2, l4);\n                  const i34 = intersection(l3, l4);\n                  if (!inBounds(i14) && inBounds(i24) && inBounds(i34)) {\n                    const q = { a: i12, b: i13, c: i34, d: i24 };\n                    rects.push({\n                      q,\n                      s: scoreQuad(q) * scoreLines(l1, l3, l4, l2)\n                    });\n                  }\n                }\n              }\n            } else if (inBounds(i23)) {\n              for (let l = k + 1; l < lines.length; ++l) {\n                const l4 = lines[l];\n                const i14 = intersection(l1, l4);\n                const i24 = intersection(l2, l4);\n                const i34 = intersection(l3, l4);\n                if (!inBounds(i24) && inBounds(i14) && inBounds(i34)) {\n                  const q = { a: i12, b: i23, c: i34, d: i14 };\n                  rects.push({\n                    q,\n                    s: scoreQuad(q) * scoreLines(l2, l3, l4, l1)\n                  });\n                }\n              }\n            }\n          } else {\n            // l1, l2 might be parallel\n            // l3 must be perpendicular\n            if (inBounds(i13) && inBounds(i23)) {\n              for (let l = k + 1; l < lines.length; ++l) {\n                const l4 = lines[l];\n                const i14 = intersection(l1, l4);\n                const i24 = intersection(l2, l4);\n                const i34 = intersection(l3, l4);\n                if (!inBounds(i34) && inBounds(i14) && inBounds(i24)) {\n                  const q = { a: i13, b: i23, c: i24, d: i14 };\n                  rects.push({\n                    q,\n                    s: scoreQuad(q) * scoreLines(l3, l2, l4, l1)\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    console.timeLog('document', 'rects');\n    rects.sort((a, b) => b.s - a.s);\n    console.log(rects);\n    if (!rects.length) continue;\n    const rect = sortQuad(rects[0].q);\n    if (process.env.NODE_ENV != 'production') {\n      plot(grayscaleToRGB(normalize(gradBuf)), srcWidth, srcHeight);\n      const ctx = plot(grayscaleToRGB(src), srcWidth, srcHeight);\n      for (const { b, a, s } of lines) {\n        const bin = Math.round(b), angle = a * Math.PI / 256;\n        ctx.strokeStyle = `rgba(255, 0, 0, ${1})`;\n        const c = Math.cos(angle);\n        const s = Math.sin(angle);\n        const rho = ((bin << 1) - diag);\n        const x = s * rho, y = c * rho;\n        ctx.beginPath();\n        ctx.moveTo(x + c * 10000, y - s * 10000);\n        ctx.lineTo(x - c * 10000, y + s * 10000);\n        ctx.stroke();\n      }\n      ctx.beginPath();\n      ctx.strokeStyle = `rgba(0, 0, 255, ${1})`;\n      ctx.lineWidth = 2;\n      ctx.moveTo(rect.a.x, rect.a.y);\n      const go = (x: number, y: number, col: string) => {\n        ctx.fillStyle = col;\n        ctx.lineTo(x, y);\n        ctx.fillRect(x - 10, y - 10, 21, 21);\n      };\n      go(rect.b.x, rect.b.y, 'green');\n      go(rect.c.x, rect.c.y, 'blue');\n      go(rect.d.x, rect.d.y, 'purple');\n      go(rect.a.x, rect.a.y, 'red');\n      ctx.stroke();\n      ctx.closePath();\n    }\n    console.timeEnd('document');\n    return {\n      a: {\n        x: rect.a.x * scaleFactor,\n        y: rect.a.y * scaleFactor\n      },\n      b: {\n        x: rect.b.x * scaleFactor,\n        y: rect.b.y * scaleFactor\n      },\n      c: {\n        x: rect.c.x * scaleFactor,\n        y: rect.c.y * scaleFactor\n      },\n      d: {\n        x: rect.d.x * scaleFactor,\n        y: rect.d.y * scaleFactor\n      }\n    };\n  }\n}\n\nconst perspective = ({ data, width, height }: ImageData, rect: Quad) => {\n  const trueHeight = Math.floor(Math.max(\n    Math.hypot(rect.a.x - rect.b.x, rect.a.y - rect.b.y) +\n    Math.hypot(rect.c.x - rect.d.x, rect.c.y - rect.d.y)\n  ) / 2);\n  const trueWidth = Math.floor((\n    Math.hypot(rect.a.x - rect.d.x, rect.a.y - rect.d.y) +\n    Math.hypot(rect.b.x - rect.c.x, rect.b.y - rect.c.y)\n  ) / 2);\n  const newHeight = Math.min(trueHeight, 1584);\n  const newWidth = Math.floor(8.5 / 11 * newHeight) // Math.floor(trueWidth / trueHeight * newHeight);\n  const projector = createProjector({\n    a: { x: 0, y: newHeight },\n    b: { x: 0, y: 0 },\n    c: { x: newWidth, y: 0 },\n    d: { x: newWidth, y: newHeight }\n  }, rect);\n  const out = new Uint8ClampedArray(newWidth * newHeight * 4);\n  const offSW = width << 2, offSE = offSW + 4;\n  for (let y = 0; y < newHeight; ++y) {\n    for (let x = 0; x < newWidth; ++x) {\n      const pt = projector({ x, y });\n      const xf = Math.floor(pt.x);\n      const yf = Math.floor(pt.y);\n      const dBase = (y * newWidth + x) * 4;\n      out[dBase + 3] = 255;\n      if (xf >= -1 && xf < width && yf >= -1 && yf < height) {\n        const xt = pt.x - xf;\n        const xtr = 1 - xt;\n        const yt = pt.y - yf;\n        const ytr = 1 - yt;\n        const rawBase = (yf * width + xf) * 4;\n        for (let i = 0; i < 3; ++i) {\n          const base = rawBase + i;\n          let a = data[base] * xtr + data[base + 4] * xt;\n          let b = data[base + offSW] * xtr + data[base + offSE] * xt;\n          out[dBase + i] = a * ytr + b * yt;\n        }\n      }\n    }\n  }\n  return new ImageData(out, newWidth, newHeight);\n}\n\nconst normalize = (src: Float32Array, dst = src) => {\n  let max = Number.EPSILON;\n  for (let px = 0; px < dst.length; ++px) max = Math.max(max, src[px]);\n  for (let px = 0; px < dst.length; ++px) dst[px] = src[px] / max;\n  return dst;\n}\n\nconst plot = (src: Uint8ClampedArray, width: number, height: number) => {\n  const into = document.createElement('canvas');\n  into.addEventListener('click', e => {\n    console.log(`x: ${e.offsetX}, y: ${e.offsetY}`)\n  })\n  into.width = width;\n  into.height = height;\n  const ctx = into.getContext('2d')!;\n  ctx.putImageData(new ImageData(src, width, height), 0, 0);\n  document.body.appendChild(into);\n  return ctx;\n}\n\n\nconst imgInput = document.getElementById('img-input') as HTMLInputElement;\nconst done = document.getElementById('done') as HTMLButtonElement;\n\nconst pages: ImageData[] = [];\n\nimgInput.addEventListener('change', async () => {\n  const img = await getImage(imgInput.files![0]);\n  let rect = detectDocument(img);\n  if (rect) {\n    pages.push(perspective(img, rect));\n  }\n});\n\ndone.addEventListener('click', async () => {\n  download(new Blob([await toPDF(pages)]), 'out.pdf');\n});\n\nif (process.env.NODE_ENV == 'production') {\n  navigator.serviceWorker.register(new URL('sw.ts', import.meta.url), { type: 'module' });\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('lNt4Y') + require('./helpers/bundle-manifest').resolve(\"4euQ1\");"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$21a6d17088e2c8cc$var$readFile","Blob","prototype","arrayBuffer","Promise","resolve","reject","fr","FileReader","onload","result","onerror","error","readAsArrayBuffer","this","$21a6d17088e2c8cc$var$canvas","document","createElement","$21a6d17088e2c8cc$var$ctx","getContext","$21a6d17088e2c8cc$var$clamp","x","min","max","$21a6d17088e2c8cc$var$grayscale","src","dst","Float32Array","buffer","byteOffset","byteLength","px","pos","$21a6d17088e2c8cc$var$gaussianKernel","$21a6d17088e2c8cc$var$gaussianBlur","width","height","matrix","radius","matSide","iim","jim","j","ii","ji","mi","mj","$21a6d17088e2c8cc$var$convolve","$21a6d17088e2c8cc$var$cos","$21a6d17088e2c8cc$var$sin","t","theta","Math","PI","cos","sin","$21a6d17088e2c8cc$var$adj3","$21a6d17088e2c8cc$var$mul3","a","b","$21a6d17088e2c8cc$var$mul3v","$21a6d17088e2c8cc$var$basisToPoints","c","d","m","y","coeffs","$21a6d17088e2c8cc$var$sortQuad","hypot","$21a6d17088e2c8cc$var$toPDF","async","images","pdfChunks","index","offsets","write","chunk","push","token","concat","chunks","len","buf","Uint8Array","chunk1","charCodeAt","set","comment","content","number","value","toString","name","array","fn","dict","values","key","stream","desc","object","reference","pages","all","map","img","canvas","putImageData","jpeg","toBlob","jpegData","call","image","Type","Subtype","Width","Height","ColorSpace","BitsPerComponent","Filter","Length","contents","Parent","Resources","XObject","I","Contents","MediaBox","pageRoot","Kids","page","Count","catalog","Pages","xrefOffset","offset","padStart","Size","Root","$21a6d17088e2c8cc$var$detectDocument","data","maxTries","console","time","diag","numBins","floor","scaleFactor","srcWidth","srcHeight","srcLen","scratch","subarray","gradBuf","by","dw","dh","by2","si","sie","sif","sic","sief","sir","sire","sj","sje","sjf","sjc","sjef","sjr","sjre","sum","rsi","rsj","rsj1","rsi1","i1","$21a6d17088e2c8cc$var$downscale","timeLog","southwest","south","southeast","totalGrad","nw","n","ne","w","e","sw","s","se","sx","sy","dir","grad","pow","angle","atan","off","ang","avgGrad","threshold","numTries","lines","bin","val","sort","maxBinErr","ceil","maxAngleErr","l1b","l1a","l1s","strength","angleErr","abs","splice","intersection","l1","l2","inBounds","p","log","slice","scoreBetween","score","xi","round","yi","xf","yf","dx","dy","err","e2","scoreQuad","rightErr","scoreLines","l3","l4","e12","e23","e34","e41","rects","i3","i12","k","i13","i23","l","i14","i24","i34","q","rect","timeEnd","$21a6d17088e2c8cc$var$perspective","trueHeight","newHeight","newWidth","projector","from","to","srcBasis","dstBasis","proj","point","projected","$21a6d17088e2c8cc$var$createProjector","out","Uint8ClampedArray","offSW","offSE","pt","dBase","xt","xtr","yt","ytr","rawBase","base","ImageData","$21a6d17088e2c8cc$var$imgInput","getElementById","$21a6d17088e2c8cc$var$done","$21a6d17088e2c8cc$var$pages","addEventListener","elem","loaded","URL","createObjectURL","revokeObjectURL","drawImage","getImageData","$21a6d17088e2c8cc$var$getImage","files","file","url","el","download","href","click","$21a6d17088e2c8cc$var$download","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","replace","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$f7838d897cb08a38$exports","getBundleURL","navigator","serviceWorker"],"version":3,"file":"index.3bdec287.js.map"}